axios는 인스턴스를 만들고, 기본 설정을 지정할 수 있으며, 요청 및 응답 인터셉터를 추가할 수 있다.

// axios 인스턴스 생성

// src/api/axiosInstance.js
import axios from 'axios';

const axiosInstance = axios.create({
  baseURL: 'https://jsonplaceholder.typicode.com', // 공통 URL
  timeout: 5000, // 타임아웃 설정 (ms 단위)
  headers: {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer YOUR_TOKEN', // 필요한 경우 토큰 추가
  }
});

// 요청 인터셉터
axiosInstance.interceptors.request.use(
  (config) => {
    // 요청 전 작업 수행 (ex: 로딩 상태 표시)
    console.log("Request sent:", config);
    return config;
  },
  (error) => {
    // 요청 오류 처리
    console.error("Request error:", error);
    return Promise.reject(error);
  }
);

// 응답 인터셉터
axiosInstance.interceptors.response.use(
  (response) => {
    // 응답 데이터 가공 (ex: 응답 데이터 필터링)
    console.log("Response received:", response);
    return response;
  },
  (error) => {
    // 응답 오류 처리 (ex: 토큰 만료 시 재요청 또는 로그아웃 처리)
    console.error("Response error:", error);
    return Promise.reject(error);
  }
);

export default axiosInstance;

// axios.create(): axiosInstance라는 새 인스턴스를 만들고 기본 설정을 추가합니다.
// 요청 인터셉터: 요청을 보내기 전에 로딩 상태를 표시하거나, 추가 작업을 수행할 수 있습니다.
// 응답 인터셉터: 응답 데이터를 가공하거나, 오류 상황에서 필요한 처리를 할 수 있습니다.

-------------------------------------------------------------------------------------
// axiosInstance 사용 예시
// src/components/UserList.js

import React, { useState, useEffect } from 'react';
import axiosInstance from '../api/axiosInstance';

function UserList() {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    axiosInstance.get('/users')
      .then(response => setUsers(response.data))
      .catch(error => console.error("Error fetching users:", error));
  }, []);

  return (
    <div>
      <h2>User List</h2>
      <ul>
        {users.map(user => (
          <li key={user.id}>{user.name}</li>
        ))}
      </ul>
    </div>
  );
}

export default UserList;
